// This is a beautiful wrapper module that 
// creates a connection pool to mysql db 
// exports a connection + query for other
// modules to use in place place of an
// typical connection + query. The purpose being
// to elllimate connection drops by releasing 
// connection after each query, preventing
// errors during server runtime. 
// May rebuild mobile_suits.js like this module 

var mysql = require("./mysql");
var config = require("./config.json")

var pool  = mysql.createPool({
    host     : 'localhost',
    user     : 'root',
    password : config.mysqlpass,
    database : config.mysqlbase
});

module.exports = {
    // writing fuctions like this allows for free arguments 素晴らしい（すばらしい）
    query: function(){ 
        var sql_args = [];
        var args = [];
        // grab arguments from function call using `arguments` keyword
        // then allocate to array
        for(var i=0; i<arguments.length; i++){
            args.push(arguments[i]);
        }
        var callback = args[args.length-1]; //last arg is callback
        pool.getConnection(function(err, connection){
          if(err) {
            console.log(err);
            return callback(err);
          }
          if(args.length > 2){
              sql_args = args[1];
          }
          // sql_args accepts sql style template literals (may have another name)
          connection.query(args[0], sql_args, function(err, results){
          　// always put connection back in pool after last query 
            connection.release(); 
            if(err){
                console.log(err);
                return callback(err);
            }
            else{
              callback(null, results);
              console.log(results);
            }
          });
        });
    }
};

